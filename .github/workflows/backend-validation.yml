name: Backend Validation

on:
  push:
    branches:
      - all # Ejecutar en todas las ramas
  pull_request:
    branches:
      - all # Ejecutar en todas las PR

jobs:
  validate-backend:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar Docker
      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo chmod 666 /var/run/docker.sock

      # Paso 3: Cargar variables de entorno desde secrets
      - name: Load environment variables
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "KEYCLOAK_ADMIN=${{ secrets.KEYCLOAK_ADMIN }}" >> $GITHUB_ENV
          echo "KEYCLOAK_ADMIN_PASSWORD=${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}" >> $GITHUB_ENV
          echo "KEYCLOAK_SERVER_URL=${{ secrets.KEYCLOAK_SERVER_URL }}" >> $GITHUB_ENV
          echo "KEYCLOAK_REALM=${{ secrets.KEYCLOAK_REALM }}" >> $GITHUB_ENV
          echo "KEYCLOAK_MASTER_REALM=${{ secrets.KEYCLOAK_MASTER_REALM }}" >> $GITHUB_ENV
          echo "KEYCLOAK_ADMIN_CLIENT=${{ secrets.KEYCLOAK_ADMIN_CLIENT }}" >> $GITHUB_ENV
          echo "KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "KEYCLOAK_HOSTNAME=${{ secrets.KEYCLOAK_HOSTNAME }}" >> $GITHUB_ENV
          echo "KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID }}" >> $GITHUB_ENV

      # Paso 4: Construir y levantar los servicios
      - name: Build and start services
        run: |
          docker-compose up -d --build

      # Paso 5: Validar la salud de los servicios
      - name: Validate service health
        run: |
          # Función para validar la salud de un servicio
          validate_health() {
            local service_name=$1
            local health_url=$2
            local retries=10
            local delay=10

            for i in $(seq 1 $retries); do
              status=$(curl -s -o /dev/null -w "%{http_code}" $health_url)
              if [ "$status" -eq 200 ]; then
                echo "$service_name is healthy"
                return 0
              fi
              echo "Waiting for $service_name to become healthy... ($i/$retries)"
              sleep $delay
            done
            echo "$service_name failed to become healthy"
            exit 1
          }

          # Validar cada servicio
          validate_health "config-server" "http://localhost:8888/actuator/health"
          validate_health "eureka-server" "http://localhost:8761/actuator/health"
          validate_health "keycloak" "http://localhost:9090/health/ready"
          validate_health "postgres" "$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5432)"

      # Paso 6: Detener los servicios
      - name: Stop services
        run: |
          docker-compose down