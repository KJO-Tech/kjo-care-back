volumes:
  grafana-data:
  prometheus-data:

services:
  config-server:
    build:
      context: ./msvc-config
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - spring-cloud-network

  eureka-server:
    build:
      context: ./msvc-eureka
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      - config-server
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - EUREKA_INSTANCE_HOSTNAME=eureka-server

    networks:
      - spring-cloud-network

  gateway:
    build:
      context: ./msvc-gateway
    container_name: gateway
    ports:
      - "8080:8080"
    depends_on:
      - config-server
      - eureka-server
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - EUREKA_INSTANCE_HOSTNAME=eureka-server
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - spring-cloud-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - spring-cloud-network
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=1y'
      - '--web.enable-lifecycle'
    networks:
      - spring-cloud-network

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - spring-cloud-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - spring-cloud-network

networks:
  spring-cloud-network:
    driver: bridge